from aiogram import types
from database import update_user_points, get_user_achievements

class RewardSystem:
    ACHIEVEMENTS = {
        'weight_milestone': {
            'points': 100,
            'title': 'üéØ –î–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ —Ü–µ–ª—å –ø–æ –≤–µ—Å—É!',
            'description': '–í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –æ—á–µ—Ä–µ–¥–Ω–æ–π —Ü–µ–ª–∏ –ø–æ —Å–Ω–∏–∂–µ–Ω–∏—é –≤–µ—Å–∞'
        },
        'workout_streak': {
            'points': 50,
            'title': 'üî• –°–µ—Ä–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫!',
            'description': '–í—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞–ª–∏—Å—å 7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥'
        },
        'diet_master': {
            'points': 75,
            'title': 'ü•ó –ú–∞—Å—Ç–µ—Ä –ø–∏—Ç–∞–Ω–∏—è!',
            'description': '–°–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø–ª–∞–Ω—É –ø–∏—Ç–∞–Ω–∏—è 14 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥'
        },
        'survey_champion': {
            'points': 25,
            'title': 'üìä –ß–µ–º–ø–∏–æ–Ω —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏!',
            'description': '30 –¥–Ω–µ–π —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö'
        }
    }
    
    @staticmethod
    async def check_and_award_achievements(user_id: int, stats: dict):
        new_achievements = []
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        if stats['weight_loss'] >= stats['weight_goal'] * 0.1:  # 10% –æ—Ç —Ü–µ–ª–∏
            new_achievements.append('weight_milestone')
            
        if stats['workout_streak'] >= 7:
            new_achievements.append('workout_streak')
            
        if stats['diet_streak'] >= 14:
            new_achievements.append('diet_master')
            
        if stats['survey_streak'] >= 30:
            new_achievements.append('survey_champion')
        
        # –ù–∞—á–∏—Å–ª—è–µ–º –æ—á–∫–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
        for achievement in new_achievements:
            await update_user_points(user_id, RewardSystem.ACHIEVEMENTS[achievement]['points'])
            
        return new_achievements

async def show_achievements(message: types.Message):
    user_id = message.from_user.id
    achievements = await get_user_achievements(user_id)
    
    response = "üèÜ –í–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è:\n\n"
    for achievement in achievements:
        ach_info = RewardSystem.ACHIEVEMENTS[achievement['type']]
        response += f"{ach_info['title']}\n"
        response += f"‚îî {ach_info['description']}\n"
        response += f"‚îî +{ach_info['points']} –æ—á–∫–æ–≤\n\n"
    
    await message.answer(response) 